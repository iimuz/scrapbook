<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hugo on しさく</title><link>https://iimuz.github.io/scrapbook/tags/hugo/</link><description>Recent content in hugo on しさく</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 15 Nov 2016 21:41:53 +0900</lastBuildDate><atom:link href="https://iimuz.github.io/scrapbook/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugoで数式を導入します</title><link>https://iimuz.github.io/scrapbook/softwaretool/hugo/hugotex/</link><pubDate>Tue, 15 Nov 2016 21:41:53 +0900</pubDate><guid>https://iimuz.github.io/scrapbook/softwaretool/hugo/hugotex/</guid><description>Hugo + Tex 私の場合メモするときは、PC使えるならばmarkdown型式のテキストで保存します。 ただ、よく数式をメモしたいときに書けなかったので、かける方法を探したところ、 markdown+Texができるようでしたので導入しました。 (Tex記法には慣れていないと書きにくいかもしれません)
現在は、サイトジェネレーターとしてHugoを利用しており、今回はmathjaxを導入します。 (別にHugoでなくてもjsを読み込めば使えるはずです。) 導入すると下記のようにインラインと一行分の挿入の両方ができるようになります。
インライン表示: $F(x) = \sum_{n=1}^{N} \frac{1}{N}$
Markdownでは、$を一つ利用して下記のように記述しています。
$F(x) = \sum_{n=1}^{N} \frac{1}{N}$ 一行表示 $$ F(x) = \sum_{n=1}^{N} \frac{1}{N} $$
Markdownでは、$を二つ利用して下記のように記述しています。
$$F(x) = \sum_{n=1}^{N} \frac{1}{N}$$ 加えて、Atomの場合は、パッケージを追加することでプレビューしながら編集できます。
設定方法 Hugo編 設定方法については、下記の2つのページを参考にしています。
HuGo に Mathjax を入れて数式を表示できるようにした MathJax の導入 違いとしては、header.htmlではなくfooter.htmlに記載しました。 前半のスクリプトでインライン表示ができるようになります。
&amp;lt;!--tex --&amp;gt; &amp;lt;script type=&amp;#34;text/x-mathjax-config&amp;#34;&amp;gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[&amp;#39;$&amp;#39;,&amp;#39;$&amp;#39;], [&amp;#34;\\(&amp;#34;,&amp;#34;\\)&amp;#34;]] } }); &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34; /&amp;gt; &amp;lt;/script&amp;gt; Atom編 追加するパッケージは、markdown-preview-plusとmathjax-wrapperになります。 markdown-preview-plusがインストールできた段階で、 インストール済みのパッケージからmarkdown-previewをdiableにします。</description></item><item><title>Hugoの初期設定</title><link>https://iimuz.github.io/scrapbook/softwaretool/hugo/hugosetup/</link><pubDate>Sat, 29 Oct 2016 19:49:51 +0900</pubDate><guid>https://iimuz.github.io/scrapbook/softwaretool/hugo/hugosetup/</guid><description>&lt;p>JekyllからHugoに環境を以降しました。
その時に行った作業のメモになります。
Macでの環境構築になりますが、
基本的にhugoをインストールしてthemeを設定しただけになります。
jekyllではread moreをプラグインで挿入しなければなりませんでしたが、
hugoでは標準で装備されていたりと設定が楽でした。&lt;/p>
&lt;p>(2016/11/20追記)
Bash On Ubuntu On Windowsを利用して、Hugo環境を構築した時のメモを追記しました。
基本的にUbuntuでのインストール方法と同じになります。
(今回はバイナリを公式サイトからダウンロードしてインストールする方法を利用しました。)&lt;/p>
&lt;h2 id="heading">作業手順&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Hugoをインストールします。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ brew file brew install hugo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ubuntuの場合は、.debファイルをダウンロードしてきてインストールします。
(環境に合わせて適切なファイルをダウンロードして下しさい。)&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ sudo dpkg -i hugo_0.17-64bit.deb
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hugoを利用して新規サイトを作成します。
今回の例では、新しくhoge-siteを作成する例になります。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ hugo new site hoge-site
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hugoのテーマを設定します。
今回は、&lt;a href="http://themes.gohugo.io">Hugo Theme Site&lt;/a>さんから
&lt;a href="https://github.com/yoshiharuyamashita/blackburn">BLACKBURN&lt;/a>を選択しました。
理由は、シンプルな構成であることとcssのみで構成されており軽そうなことです。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cd hoge-site
$ mkdir themes
$ cd themes
$ git clone git@github.com:yoshiharuyamashita/blackburn.git blackburn
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Themeが適用されてサイトが構築できるかサーバーを建てて確認します。
今回は、blackburnのthemeになりますが、
任意のthemeを利用した場合はblackburnの部分を設定したthemeに変えてください。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cd ..
$ hugo server -t blackburn
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>サイトの設定を記載します。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-toml" data-lang="toml">&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;hoge&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">baseurl&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ja-jp&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">theme&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;blackburn&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">canonifyurls&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e"># 相対パスではなくbaseurlを基準とした絶対パスとする&lt;/span>
[&lt;span style="color:#a6e22e">params&lt;/span>]
&lt;span style="color:#a6e22e">description&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;hoge&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">author&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;hoge&amp;#34;&lt;/span>
[&lt;span style="color:#a6e22e">taxonomies&lt;/span>]
&lt;span style="color:#a6e22e">category&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">tag&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item></channel></rss>